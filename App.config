<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="CBakWeChatDesktop.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
        </sectionGroup>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    </configSections>
    <userSettings>
        <CBakWeChatDesktop.Properties.Settings>
            <setting name="server" serializeAs="String">
                <value />
            </setting>
            <setting name="isLogin" serializeAs="String">
                <value>False</value>
            </setting>
            <setting name="token" serializeAs="String">
                <value />
            </setting>
            <setting name="currentSessionId" serializeAs="String">
                <value>0</value>
            </setting>
            <setting name="currentSessionDir" serializeAs="String">
                <value />
            </setting>
        </CBakWeChatDesktop.Properties.Settings>
    </userSettings>

	<log4net>

		<!--root:定义日志输出的方式和等级-->
		<root>
			<!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
			<!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
			<!--如果没有定义LEVEL的值，则缺省为DEBUG-->
			<level value="ALL" />
			<!--定义输出的信息等级为所有其中包括Fatal.Error.Warn.Info.Debug-->
			<!--文件形式记录日志-->
			<appender-ref ref="LogFileAppender" />
		</root>

		<!--定义logger对象的名字为logApp,以方便在代码中使用，<logger>配置项可以不配置-->
		<logger name="Logging">
			<level value="DEBUG" />
		</logger>

		<!--个配置文件可以有很多appender,一个appender节就相当于一个日志输出介质或方法。-->

		<!-- 定义输出到文件中 -->
		<appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">

			<!--定义文件存放位置-->
			<file value="Log/" />

			<!--是否追加到文件,默认为true，通常无需设置-->
			<appendToFile value="true" />

			<!--变换的形式为日期，这种情况下每天只有一个日志-->
			<!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
			<rollingStyle value="Date" />

			<!--变换的形式为日志大小-->
			<!--这种情况下MaxSizeRollBackups和maximumFileSize的节点设置才有意义-->
			<!--<rollingStyle value="Size"/>-->

			<!--这是按日期产生文件夹，并在文件名前也加上日期-->
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<datePattern value="yyyy-MM-dd&quot;.log&quot;"/>

			<!--日志最大可备份数,每天记录的日志文件个数，与maximumFileSize配合使用-->
			<maxSizeToRollBackups value="-1" />
			<!--每个日志文件的最大大小-->
			<!--可用的单位:KB|MB|GB-->
			<!--不要使用小数,否则会一直写入当前日志-->
			<maximumFileSize value="10MB" />

			<staticLogFileName value="false" />

			<layout type="log4net.Layout.PatternLayout,log4net">
				<!--每条日志末尾的文字说明-->
				<!--输出格式-->
				<!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
				<conversionPattern value="%d - 线程ID:[%thread] - %-5level - %m%n" />
			</layout>

			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="DEBUG" />
				<param name="LevelMax" value="ERROR" />
			</filter>
		</appender>
	</log4net>
</configuration>